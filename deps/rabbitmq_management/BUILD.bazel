load(
    "@bazel-erlang//:bazel_erlang_lib.bzl",
    "erlang_lib",
    "test_erlang_lib",
)
load("@bazel-erlang//:ct.bzl", "ct_test")
load(
    "//:rabbitmq.bzl",
    "APP_VERSION",
    "RABBITMQ_ERLC_OPTS",
    "RABBITMQ_TEST_ERLC_OPTS",
)

APP_NAME = "rabbitmq_management"

APP_DESCRIPTION = "RabbitMQ Management Console"

APP_MODULE = "rabbit_mgmt_app"

EXTRA_APPS = [
    "mnesia",
    "ranch",
    "ssl",
    "crypto",
    "public_key",
]

APP_ENV = """[
	    {http_log_dir,      none},
	    {load_definitions,  none},
	    {management_db_cache_multiplier, 5},
	    {process_stats_gc_timeout, 300000},
	    {stats_event_max_backlog, 250},

	    {cors_allow_origins, []},
	    {cors_max_age, 1800},
	    {content_security_policy, "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'"}
	  ]"""

FIRST_SRCS = [
    "src/rabbit_mgmt_extension.erl",
]

DEPS = [
    "//deps/amqp_client:bazel_erlang_lib",
    "//deps/rabbit_common:bazel_erlang_lib",
    "//deps/rabbit:bazel_erlang_lib",
    "//deps/rabbitmq_management_agent:bazel_erlang_lib",
]

RUNTIME_DEPS = [
    "//deps/rabbitmq_web_dispatch:bazel_erlang_lib",
    "@cowboy//:bazel_erlang_lib",
    "@cowlib//:bazel_erlang_lib",
]

erlang_lib(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    app_version = APP_VERSION,
    erlc_opts = RABBITMQ_ERLC_OPTS,
    extra_apps = EXTRA_APPS,
    first_srcs = FIRST_SRCS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

test_erlang_lib(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    app_version = APP_VERSION,
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
    extra_apps = EXTRA_APPS,
    first_srcs = FIRST_SRCS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

# TODO: prepare-dist equivalent from Makefile
