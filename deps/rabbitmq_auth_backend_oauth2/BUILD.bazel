load("@bazel-erlang//:bazel_erlang_lib.bzl", "erlc")
load("@bazel-erlang//:ct.bzl", "ct_suite")
load("//:rabbitmq_home.bzl", "rabbitmq_home")
load("//:rabbitmq_run.bzl", "rabbitmq_run")
load("//:rabbitmq.bzl", "APP_VERSION", "RABBITMQ_TEST_ERLC_OPTS", "rabbitmq_lib")

APP_NAME = "rabbitmq_auth_backend_oauth2"

APP_DESCRIPTION = "OAuth 2 and JWT-based AuthN and AuthZ backend"

BUILD_DEPS = [
    "//deps/rabbit_common:bazel_erlang_lib",
    "//deps/rabbitmq_cli:rabbitmqctl",
]

DEPS = [
    "@jose//:bazel_erlang_lib",
]

RUNTIME_DEPS = [
    "//deps/rabbit:bazel_erlang_lib",
    "@cowlib//:bazel_erlang_lib",
]

rabbitmq_lib(
    app_description = APP_DESCRIPTION,
    app_name = APP_NAME,
    app_version = APP_VERSION,
    build_deps = BUILD_DEPS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

rabbitmq_home(
    name = "broker-for-tests-home",
    plugins = [
        "//deps/rabbit:bazel_erlang_lib",
        ":bazel_erlang_lib",
    ],
)

rabbitmq_run(
    name = "rabbitmq-for-tests-run",
    home = ":broker-for-tests-home",
)

erlc(
    name = "rabbit_auth_backend_oauth2_test_util",
    srcs = [
        "test/rabbit_auth_backend_oauth2_test_util.erl",
    ],
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
)

ct_suite(
    name = "add_uaa_key_command_SUITE",
    size = "small",
    data = [
        "@rabbitmq_ct_helpers//tools/tls-certs:Makefile",
        "@rabbitmq_ct_helpers//tools/tls-certs:openssl.cnf.in",
    ],
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
        "RABBITMQ_RUN": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_oauth2/rabbitmq-for-tests-run",
    },
    runtime_deps = [
        "@rabbitmq_ct_helpers//:bazel_erlang_lib",
    ],
    deps = [
        "//deps/rabbit_common:bazel_erlang_lib",
    ],
)

ct_suite(
    name = "config_schema_SUITE",
    data = [
        "@rabbitmq_ct_helpers//tools/tls-certs:Makefile",
        "@rabbitmq_ct_helpers//tools/tls-certs:openssl.cnf.in",
    ],
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
        "RABBITMQ_RUN": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_oauth2/rabbitmq-for-tests-run",
        "RABBITMQCTL": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_oauth2/broker-for-tests-home/sbin/rabbitmqctl",
        "RABBITMQ_PLUGINS": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_oauth2/broker-for-tests-home/sbin/rabbitmq-plugins",
    },
    tools = [
        ":rabbitmq-for-tests-run",
    ],
    runtime_deps = [
        "//deps/rabbitmq_cli:elixir_as_bazel_erlang_lib",
        "//deps/rabbitmq_cli:rabbitmqctl",
        "@rabbitmq_ct_client_helpers//:bazel_erlang_lib",
        "@rabbitmq_ct_helpers//:bazel_erlang_lib",
    ],
)

ct_suite(
    name = "jwks_SUITE",
    additional_beam = [
        ":rabbit_auth_backend_oauth2_test_util",
    ],
    additional_srcs = [
        "test/jwks_http_app.erl",
        "test/jwks_http_handler.erl",
        "test/jwks_http_sup.erl",
    ],
    data = [
        "@rabbitmq_ct_helpers//tools/tls-certs:Makefile",
        "@rabbitmq_ct_helpers//tools/tls-certs:openssl.cnf.in",
    ],
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
        "RABBITMQ_RUN": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_oauth2/rabbitmq-for-tests-run",
        "RABBITMQCTL": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_oauth2/broker-for-tests-home/sbin/rabbitmqctl",
        "RABBITMQ_PLUGINS": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_oauth2/broker-for-tests-home/sbin/rabbitmq-plugins",
    },
    tools = [
        ":rabbitmq-for-tests-run",
    ],
    runtime_deps = [
        "//deps/rabbitmq_cli:elixir_as_bazel_erlang_lib",
        "//deps/rabbitmq_cli:rabbitmqctl",
        "@cowboy//:bazel_erlang_lib",
        "@rabbitmq_ct_client_helpers//:bazel_erlang_lib",
        "@rabbitmq_ct_helpers//:bazel_erlang_lib",
    ],
    deps = [
        "//deps/amqp_client:bazel_erlang_lib",
        "//deps/rabbit_common:bazel_erlang_lib",
    ],
)

ct_suite(
    name = "scope_SUITE",
    size = "small",
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
    },
    deps = [
        "//deps/rabbit_common:bazel_erlang_lib",
    ],
)

ct_suite(
    name = "unit_SUITE",
    size = "small",
    additional_beam = [
        ":rabbit_auth_backend_oauth2_test_util",
    ],
    data = [
        "@rabbitmq_ct_helpers//tools/tls-certs:Makefile",
        "@rabbitmq_ct_helpers//tools/tls-certs:openssl.cnf.in",
    ],
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
        "RABBITMQ_RUN": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_oauth2/rabbitmq-for-tests-run",
    },
    runtime_deps = [
        "@rabbitmq_ct_helpers//:bazel_erlang_lib",
    ],
    deps = [
        "//deps/rabbit_common:bazel_erlang_lib",
    ],
)

ct_suite(
    name = "wildcard_match_SUITE",
    size = "small",
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
    },
)
